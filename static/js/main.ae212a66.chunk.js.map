{"version":3,"sources":["train.js","piano.js","results.js","settings.js","ToneGenerator.js","App.js","serviceWorker.js","index.js"],"names":["TrainData","note_stack","guess_stack","result_stack","start","guessed","this","addGuess","bind","addNote","calcScore","note","unshift","score","i","length","Math","round","WhiteNote","props","className","onClick","e","onNoteClick","name","BlackNote","Piano","PianoPhone","ResultItem","index","guess","result","Results","notes","guesses","map","results","guess_note","key","Settings","to","note_arr","ToneGen","synth","Synth","toMaster","random_note","play_note","play_note_button","play_rand_note","floor","random","triggerAttackRelease","num_notes","Sequence","time","console","log","trainData","toneGen","PlayView","useState","setNote","onStart","ui","TrainView","setGuess","setResult","replay","ResultsView","App","state","swapUI","setState","path","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae212a66.chunk.js","sourcesContent":["import './App.css';\r\n\r\nclass TrainData {\r\n\r\n  note_stack = [];\r\n  guess_stack = [];\r\n  result_stack = [];\r\n  start = false;\r\n  guessed = true;\r\n\r\n  constructor() {\r\n    this.addGuess  = this.addGuess.bind(this);\r\n    this.addNote   = this.addNote.bind(this);\r\n    this.calcScore = this.calcScore.bind(this);\r\n  }\r\n\r\n  addNote(note) {\r\n    if (!this.guessed) {\r\n      this.guess_stack.unshift('-');\r\n    }\r\n    this.note_stack.unshift(note);\r\n    this.guessed = false;\r\n  }\r\n\r\n  addGuess(note) {\r\n    if (!this.guessed) {\r\n      this.guessed = true;\r\n      this.guess_stack.unshift(note)\r\n      this.result_stack.unshift(note === this.note_stack[0]);\r\n    }\r\n    return (this.result_stack[0]);\r\n  }\r\n  \r\n  calcScore() {\r\n    var score = 0;\r\n    for (let i = 0; i < this.note_stack.length; ++i) {\r\n      if (i < this.guess_stack.length)\r\n        if (this.note_stack[i] === this.guess_stack[i])\r\n          ++score;\r\n    }\r\n    if (score === 0)\r\n      return [0,0];\r\n    return [score, Math.round(100 * (score / this.note_stack.length))];\r\n  }\r\n}\r\n\r\nexport default TrainData;","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction WhiteNote(props) {\r\n  return (\r\n    <div \r\n        className=\"key\" \r\n        onClick={(e) => props.onNoteClick(props.name)}>\r\n      {/* {props.name} */}\r\n    </div>\r\n  );\r\n}\r\nfunction BlackNote(props) {\r\n  return (\r\n    <div \r\n        className=\"key black\" \r\n        onClick={(e) => props.onNoteClick(props.name)}>\r\n      {/* {props.name} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Piano(props) {\r\n  return (\r\n  <div className=\"piano\">\r\n    <WhiteNote name={'C4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'C#4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'D4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Eb4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'E4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'F4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'F#4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'G4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Ab4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'A4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Bb4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'B4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'C5'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'C#5'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'D5'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Eb5'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'E5'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'F5'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'F#5'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'G5'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Ab5'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'A5'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Bb5'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'B5'} onNoteClick={props.onNoteClick} />\r\n  </div>\r\n  );\r\n}\r\n\r\nfunction PianoPhone(props) {\r\n  return (\r\n  <div className=\"piano phone\">\r\n    <WhiteNote name={'C4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'C#4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'D4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Eb4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'E4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'F4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'F#4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'G4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Ab4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'A4'} onNoteClick={props.onNoteClick} />\r\n      <BlackNote name={'Bb4'} onNoteClick={props.onNoteClick} />\r\n    <WhiteNote name={'B4'} onNoteClick={props.onNoteClick} />\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport {Piano, PianoPhone};\r\nexport default Piano;","import React from 'react';\r\nimport './App.css';\r\n\r\nfunction getResult(result) {\r\n    if (result)\r\n        return '\\u2713'; // unicode checkmark\r\n    else\r\n        return 'X';\r\n}\r\n\r\nfunction ResultItem(props) {\r\n  return(\r\n    <tr>\r\n      <th className='Results-table-cell'>{props.index}.</th>\r\n      <th className='Results-table-cell'>{props.guess}</th>\r\n      <th className='Results-table-cell'>{props.note}</th>\r\n      <th className='Results-table-cell'>{getResult(props.result)}</th>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction Results(props) {\r\n  return (\r\n    <div className=\"App App-header\">\r\n      <h2>Score: {props.score[1]}% ({props.score[0]} / {props.notes.length})</h2>\r\n      <table className='Results-table'>\r\n        <thead>\r\n          <tr>\r\n            <th className='Results-table-cell'/>\r\n            <th className='Results-table-cell'>Guess</th>\r\n            <th className='Results-table-cell'>Note</th>\r\n            <th className='Results-table-cell'>Result</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.guesses.map((guess, index) => (\r\n            [guess, props.notes[index], props.results[index]]\r\n            )).map((guess_note, index) => ( \r\n            <ResultItem \r\n                key={index} \r\n                index={props.guesses.length - index}\r\n                guess={guess_note[0]} \r\n                note={guess_note[1]} \r\n                result={guess_note[2]}\r\n            />\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\nfunction Settings() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Settings</h1>\r\n      <p>\r\n        <NavLink to='/'>\r\n          <button className=\"App-button colorGreen\">Home</button>\r\n        </NavLink>\r\n        <NavLink to='/train'>\r\n          <button className=\"App-button colorCoral\">Start Training</button>\r\n        </NavLink>\r\n      </p>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import { Synth, Sequence } from 'tone';\r\n\r\nvar note_arr = ['C4', 'C#4', 'D4', 'Eb4','E4','F4', 'F#4','G4', 'Ab4', 'A4', 'Bb4', 'B4',\r\n                'C5', 'C#5', 'D5', 'Eb5','E5','F5', 'F#5','G5', 'Ab5', 'A5', 'Bb5', 'B5'];\r\n\r\n/*\r\nThis is a stateless, non-rendering tone generate. It does one thing: plays notes \r\n*/\r\nclass ToneGen {\r\n\r\n  constructor() {\r\n    this.synth = new Synth().toMaster();\r\n\r\n    this.random_note = this.random_note.bind(this);\r\n    this.play_note = this.play_note.bind(this);\r\n    this.play_note_button = this.play_note_button.bind(this);\r\n    this.play_rand_note = this.play_rand_note.bind(this);\r\n  }\r\n\r\n  random_note() {\r\n    // 4 = octave\r\n    // TODO: refactor into a property\r\n    // TODO: make this configurable from settings\r\n    return note_arr[Math.floor(Math.random() * note_arr.length)];\r\n  }\r\n\r\n  play_note(note) {\r\n    //play the note for the duration of an quarter note\r\n    this.synth.triggerAttackRelease(note, '4n');\r\n  }\r\n\r\n  play_note_button(note) {\r\n    this.play_note(note)\r\n  }\r\n\r\n  play_rand_note() {\r\n    var note = this.random_note();\r\n    this.play_note(note);\r\n  \r\n    return note;\r\n  }\r\n\r\n  play_seq(num_notes) {\r\n    new Sequence(function(time, note){\r\n      console.log(note);\r\n    //straight quater notes\r\n    }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");   \r\n \r\n  }\r\n}\r\n\r\nexport default ToneGen;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\nimport TrainData from './train.js';\nimport {Piano , PianoPhone} from './piano.js';\nimport Results from './results.js';\nimport Settings from './settings.js';\nimport ToneGen from './ToneGenerator';\n\nvar trainData = new TrainData();\nvar toneGen = null;\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ui : \"computer\"\n    }\n\n    this.onStart = this.onStart.bind(this);\n    this.swapUI = this.swapUI.bind(this);\n  }\n\n  onStart() {\n    console.log(\"resetting train data\");\n    trainData = new TrainData();\n    toneGen = new ToneGen();\n  }\n\n  swapUI() {\n    if (this.state.ui === \"computer\") {\n      console.log(\"changing to phone\");\n      this.setState({ui : \"phone\"});\n    }\n    else {\n      this.setState({ui : \"computer\"});\n    }\n  }\n\n  render() {\n    var ui;\n    if (this.state.ui === \"computer\") {\n      ui = Piano;\n    }\n    else {\n      ui = PianoPhone;\n    }\n    return(\n    <header className=\"App App-header\">\n      <h1>Aural Training</h1> \n      <button onClick={(e) => this.swapUI()}>UI</button>\n      <BrowserRouter>\n        <Switch>\n          <Route path='/settings'>\n            <Settings />\n          </Route>\n          <Route path='/results'>\n            <ResultsView trainData={trainData}/>\n          </Route>\n          <Route path='/train'> \n            <TrainView trainData={trainData} replay={true} ui={ui}/> \n          </Route>\n          <Route path='/'> \n            <PlayView onStart={this.onStart} ui={ui}/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </header>\n  );}\n}\n\nfunction PlayView (props) {\n  // react hooks!\n  const [note, setNote] = useState('');\n  \n  return (\n  <div>\n    <p>\n      <Link to='/train'>\n        <button className=\"App-button colorGreen\" onClick={props.onStart}>Start</button>\n      </Link>\n      <Link to='/settings'>\n        <button className=\"App-button colorCoral\">Settings</button>\n      </Link>\n      <Link to='/results'>\n        <button className=\"App-button colorYellow\">Results</button>\n      </Link>\n    </p>\n    <div>\n      <p>Play a Note:</p>\n      <props.ui \n        onNoteClick = {(note) => {\n          console.log(note);\n          // need to do it this way so that the AudioContext is created by the user\n          // for Chrome\n          if (toneGen === null) {\n            toneGen = new ToneGen()\n          }\n          toneGen.play_note_button(note); \n          setNote(note)}\n        }\n      />\n      <p>Note Played:</p>\n      <p>{note}</p>\n    </div>\n  </div>\n  );\n}\n\nfunction TrainView (props) {\n  const [guess, setGuess] = useState('');\n  const [result, setResult] = useState(null);\n  // const toneGen = new ToneGen();\n  return (\n    <div>\n      <p>\n        <Link to='/'>\n          <button className=\"App-button colorGreen\">Stop</button>\n        </Link>\n        <Link to='/settings'>\n          <button className=\"App-button colorCoral\">Settings</button>\n        </Link>\n        <Link to='/results'>\n          <button className=\"App-button colorYellow\">Results</button>\n        </Link>\n      </p>\n      <div className=\"App\">\n        <p>What Note Just Played?</p>\n        <props.ui\n          onNoteClick = {(note) => {\n            if (!trainData.guessed) {\n              setGuess(note);\n            }\n            setResult(trainData.addGuess(note));\n          }}\n        />\n        {props.replay && \n          <button className=\"App-button colorYellow\"\n              onClick={(e) => {\n                if (toneGen !== null) {\n                  toneGen.play_note_button(trainData.note_stack[0])\n                }\n              }}>\n            Replay\n          </button>\n        }\n        <button className=\"App-button colorGreen\"\n            onClick={(e) => {\n              // need to do it this way so that the AudioContext is created by the user\n              // for Chrome\n              if (toneGen === null) {\n                toneGen = new ToneGen()\n              }\n              var note = toneGen.play_rand_note()\n              console.log(note)\n              trainData.addNote(note);\n            }}>\n          Next Note\n        </button>\n        <p>You Guessed:</p>\n        <p>{guess}{result === null ? '' : (result ? ' : Correct' : ' : Incorrect')}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction ResultsView (props) {\n  return (\n    <div> \n    <p>\n      <Link to='/'>\n        <button className=\"App-button colorGreen\">Start Over</button>\n      </Link>\n      <Link to='/settings'> \n        <button className=\"App-button colorCoral\">Settings</button>\n      </Link>\n      <Link to='/train'>\n        <button className=\"App-button colorYellow\">\n          Continue\n        </button>\n      </Link>\n    </p>\n    <Results\n        guesses = {trainData.guess_stack}\n        notes   = {trainData.note_stack}\n        results = {trainData.result_stack}\n        score   = {trainData.calcScore()}\n    />\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ), document.getElementById('root')\n);\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}